{"pageProps":{"blog":[{"id":"install-nextjs16-myblog","createdAt":"2025-10-26T04:49:26.713Z","updatedAt":"2025-10-26T08:07:23.450Z","title":"自分のブログにNextjs16 を導入する","content":"<p>自分のブログにNextjs16を導入する備忘録です。</p><p>(次いでにCI/CDの不具合も直しますw)</p><h2 id=\"h543e281a9e\">現在の環境</h2><h3 id=\"h13c3fb5a8b\">フレームワーク</h3><h3 id=\"hef5a20b539\">Nextjs 15.5</h3><p>PandaCSS</p><p>GSAP</p><h3 id=\"h2cbf9a1f7c\">CMS</h3><p>MicroCMS</p><h3 id=\"h328c1c31b7\">サーバー</h3><p>GitHub Pages + Actions</p><p></p><h2 id=\"h7457d87201\">MCP を使ってみる</h2><p>Nextjs 公式がMCPサーバーを提供してくれているので使ってみます。</p><p>導入方法は他と一緒だと思います。多分...</p><p><a href=\"https://nextjs.org/docs/app/guides/upgrading/version-16#setup\">https://nextjs.org/docs/app/guides/upgrading/version-16#setup</a></p><p>GitHub Copilot + Claud Sonnet 4と一緒に使ってみます。Sonnetは性能はいいんだけど利用枠をバカ食いするのでこういう難しいタスクの時だけ使ってます。数行のプロンプトだけで0.3%も食いましたw</p><p>送信したプロンプトはこれ。</p><p>&quot;Nextjs16にアップデートする ただしGitHub Pageで使用できるようにまたstyled jsxを導入する&quot;</p><p>少し不安でしたが、ろーかるでは動作を確認できました。</p><h2 id=\"ha46d68779f\">変わったこと</h2><p></p><p></p>","eyecatch":{"url":"https://images.microcms-assets.io/assets/a2939c8d25434ae5a1f853f2dc239a0f/9056b34c4c50456a8b43617ca493b720/cms%E7%94%A8.jpeg","height":1200,"width":1200,"alt":"my social icon / SNS用アイコン"},"category":null},{"id":"google_host_ip9ieywuu5cf","createdAt":"2025-10-24T14:03:01.548Z","updatedAt":"2025-10-27T08:26:27.435Z","publishedAt":"2025-10-24T14:03:01.548Z","revisedAt":"2025-10-27T08:26:27.435Z","title":"Google保有ドメインについて","content":"<p>以前ytimage-dlというサムネイルをダウンロードできるWebアプリをつくったことがあるのですが、その時にyoutubeのブラウザ版だといたるところから画像データを取得していてほかにどんなサーバーがあるかきになったので色々調べます。そのほかGoogle Trust serviceやGoogle検索の共有用短縮リンク、他国のGoogle検索のドメインなども載せます。</p><p>たぶん一日でしらべきれないので随時更新していきます。</p><p>ドメインだけ知りたい場合はこちら =&gt; <a href=\"https://nknighta.me/dev/google-img-hosts\">https://nknighta.me/dev/google-img-hosts</a></p><h2 id=\"he971a83838\">Youtube系</h2><p>画像</p><p>yt3.ggpht[.]com アカウントアイコン他 </p><p></p><p>i.ytimg[.]com サムネイルとか</p><p></p><p>img.youtube[.]com サムネイルとか</p><p></p><p>その他</p><p>yt[.]be 短縮リンク (TVやプレステでログインするときに使用)</p><p></p><p>youtu[.]be 短縮リンク2 (Xとかに共有するとき用)</p><p></p><h2 id=\"h118c1d2ed8\">Googleサービス</h2><p>pki[.]goog Google Trust Services (Google独自の証明局)</p><p>search[.]google 検索画面やDiscoverでのURL共有用 indexにアクセスすると検索サービスの概要がでてくる。これ経由でサイトにアクセスするとアクティビティに表示されることがある</p><p>abx[.]xyz Google親企業のAlphabetの公式サイト。大手としては珍しいxyzドメイン。決算報告書もみれる</p>","eyecatch":{"url":"https://images.microcms-assets.io/assets/a2939c8d25434ae5a1f853f2dc239a0f/b6e00a3e87074ba6a1fd948afcdd3373/GOOGLE_APP_HERO_en-US.jpg","height":760,"width":710},"category":{"id":"gizfo_py447e","createdAt":"2025-08-27T02:44:53.914Z","updatedAt":"2025-08-27T02:44:53.914Z","publishedAt":"2025-08-27T02:44:53.914Z","revisedAt":"2025-08-27T02:44:53.914Z","name":"tech_learn"}},{"id":"ikl0s8wba0","createdAt":"2025-09-13T14:14:33.557Z","updatedAt":"2025-09-13T16:49:05.641Z","publishedAt":"2025-09-13T14:26:05.610Z","revisedAt":"2025-09-13T16:49:05.641Z","title":"OpenNextでchakra UIが動かない時の修正法","content":"<p>先日Nextjs+ChakraUIで作成したアプリケーションをCloudflareにデプロイしようと思ったのですがエラーが出まくってしょうがなかったので対処法を書いておきます。</p><h2 id=\"h9f510f3156\">やりたいこと</h2><p>Nextjs+ChakraUIのWebアプリをCloudflareにデプロイ</p><h2 id=\"h1619609f8c\">エラーコマンドとエラー表示</h2><pre><code class=\"language-shell\">$npx opennextjs-cloudflare build\n\n...[中略]...\n\n[ERROR] Could not resolve &quot;jose&quot;\n\n    .open-next/server-functions/default/node_modules/next-auth/jwt/index.js:15:20:\n      15 │ var _jose = require(&quot;jose&quot;);\n         ╵                     ~~~~~~\n\n  The module &quot;./dist/browser/index.js&quot; was not found on the file system:\n\n    .open-next/server-functions/default/node_modules/jose/package.json:68:17:\n      68 │       &quot;workerd&quot;: &quot;./dist/browser/index.js&quot;,\n         ╵                  ~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  You can mark the path &quot;jose&quot; as external to exclude it from the bundle, which will remove this\n  error and leave the unresolved path in the bundle. You can also surround this &quot;require&quot; call with\n  a try/catch block to handle this failure at run-time instead of bundle-time.\n\n✘ [ERROR] Could not resolve &quot;@panva/hkdf&quot;\n\n    .open-next/server-functions/default/node_modules/next-auth/jwt/index.js:16:43:\n      16 │ var _hkdf = _interopRequireDefault(require(&quot;@panva/hkdf&quot;));\n         ╵                                            ~~~~~~~~~~~~~\n\n  The module &quot;./dist/web/index.js&quot; was not found on the file system:\n\n    .open-next/server-functions/default/node_modules/@panva/hkdf/package.json:33:17:\n      33 │       &quot;workerd&quot;: &quot;./dist/web/index.js&quot;,\n         ╵                  ~~~~~~~~~~~~~~~~~~~~~\n\n  You can mark the path &quot;@panva/hkdf&quot; as external to exclude it from the bundle, which will remove\n  this error and leave the unresolved path in the bundle. You can also surround this &quot;require&quot; call\n  with a try/catch block to handle this failure at run-time instead of bundle-time.\n\n✘ [ERROR] Could not resolve &quot;jose&quot;\n\n    .open-next/server-functions/default/node_modules/openid-client/lib/helpers/client.js:1:21:\n      1 │ const jose = require(&apos;jose&apos;);\n        ╵                      ~~~~~~\n\n  The module &quot;./dist/browser/index.js&quot; was not found on </code></pre><h2 id=\"h1c2bcaa1fd\">原因と修正</h2><h3 id=\"h9c1f22bd6d\">原因</h3><p>ChakraUIの依存関係である@emotionがビルド時に読み込まれていなかった...</p><p>next.config.jsを修正</p><div class=\"iframely-embed\"><div class=\"iframely-responsive\" style=\"padding-bottom: 50%;\"><a href=\"https://gist.github.com/nk4dev/d46d42a549dac2c13c3333a063b14d05\" data-iframely-url=\"https://cdn.iframe.ly/api/iframe?url=https%3A%2F%2Fgist.github.com%2Fnk4dev%2Fd46d42a549dac2c13c3333a063b14d05&amp;key=c271a3ec77ff4aa44d5948170dd74161\"></a></div></div><script async src=\"https://cdn.iframe.ly/embed.js\" charset=\"utf-8\"></script><p>再度ビルドしたら通りましたー</p><h3 id=\"h6a5297362b\">追記</h3><h3 id=\"h7295077a0f\">エラーの原因(?)</h3><p>ビルド時のエラーについて、opennext側でビルドする際になぜかはわかりませんがライブラリをコピーしているっぽいのでこれが原因なのかなぁ...??</p><p>通常のnext buildとopennextのビルドは挙動がちがうので予測できない動きしちゃって難しい</p><pre><code>undling middleware function...\nDEBUG OpenNext Resolve plugin for middleware\nDEBUG OpenNext Edge plugin\nDEBUG OpenNext Replacement plugin externalMiddlewareOverrides Delete override includeCacheInMiddleware\nBundling static assets...\nBundling cache assets...\nBuilding server function: default...\nDEBUG copyTracedFiles: 224308 ms\nDEBUG Copying package using a workerd condition: node_modules/@emotion/cache -&gt; .open-next/server-functions/default/node_modules/@emotion/cache\nDEBUG Copying package using a workerd condition: node_modules/@panva/hkdf -&gt; .open-next/server-functions/default/node_modules/@panva/hkdf\nDEBUG Copying package using a workerd condition: node_modules/next-auth/node_modules/jose -&gt; .open-next/server-functions/default/node_modules/next-auth/node_modules/jose\nDEBUG Copying package using a workerd condition: node_modules/openid-client/node_modules/jose -&gt; .open-next/server-functions/default/node_modules/openid-client/node_modules/jose</code></pre><h2 id=\"he4ba96ecb5\">リンク</h2><p><a href=\"https://chakra-ui.com/\">https://chakra-ui.com/</a></p><p><a href=\"https://opennext.js.org/\">https://opennext.js.org/</a></p><p><a href=\"https://nextjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">https://nextjs.org</a></p><p></p><p></p>","eyecatch":{"url":"https://images.microcms-assets.io/assets/a2939c8d25434ae5a1f853f2dc239a0f/9cedf20330d04ef1bfc9099f6e7aa7c8/chakraui.jpg","height":579,"width":993},"category":null},{"id":"learning_astrojs","createdAt":"2025-08-27T02:41:00.404Z","updatedAt":"2025-09-13T14:27:30.073Z","publishedAt":"2025-08-28T15:12:36.264Z","revisedAt":"2025-09-13T14:27:30.073Z","title":"AstroJSに入門する","content":"<p>Astroで作ったブログです</p><p>https://blog.nknighta.me/</p><h2 id=\"h148ee15d9e\">なぜAstroを触ろうと思ったのか?</h2><p>普段からいろんなJSやTSのフレームワークを試しているのですが、いつも見ているTakuya MatsuyamaさんがYoutube上でAstroを使ってサイトを制作する動画をうｐしてたのと、ウマ娘のキャンペーンでBoC&apos;zの公式サイトがAstroで開発されていて改めて勉強がてらBlogを作ってみました。</p><p></p><blockquote class=\"twitter-tweet\" data-theme=\"dark\" data-dnt=\"true\" align=\"center\"><p lang=\"ja\" dir=\"ltr\">AstroJS使いやすいし動作も早いけど、Nextjsより文字化けしやすかったして少し癖ありかも<br><br>でもv5はv1に比べていろいろ機能も追加されてるし、<br>公式がGitHub pagesへのデプロイ方法も載せてくれてる(しかも日本語)のですごく良き<a href=\"https://t.co/JB5f0LQEpf\">https://t.co/JB5f0LQEpf</a></p>— Nknight AMAMIYA@varius.technology (@nk4dev) <a href=\"https://twitter.com/nk4dev/status/1960532121778577808?ref_src=twsrc%5Etfw\">August 27, 2025</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>Astroの方針としては、</p><p></p><blockquote><p>&quot;これに対して、モダンなウェブフレームワークの多くは、<strong>ウェブアプリケーション</strong>を作成するために設計されています。これらのフレームワークは、ブラウザ上におけるより複雑な、アプリケーションのような体験を作成するのに適しています。ログインした管理者向けのダッシュボード、受信トレイ、ソーシャルネットワーク、Todoリスト、さらには<a href=\"https://www.figma.com/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Figma</a>や<a href=\"https://ping.gg/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Ping</a>のようなネイティブに近いアプリケーションなどがその例です。しかし、その複雑さゆえに、コンテンツを配信する際に優れたパフォーマンスを発揮するために苦労するかもしれません。</p><p style=\"text-align: start\">Astroは、その初期から静的サイトジェネレータとしてコンテンツに焦点を当ててきたため、コンテンツと読者を尊重しながら、<strong>パフォーマンスとパワーに優れた動的なウェブアプリケーションへと適切にスケールアップできます</strong>。Astroは、コンテンツにフォーカスするという独自の立場から、トレードオフを考慮しつつ、アプリケーションにフォーカスしたウェブフレームワークでは実装する意味がないようなパフォーマンス向上に取り組んでいます。&quot;</p></blockquote><p>だそうです。</p><p>ドキュメント上でコンテンツ駆動ベースと書いてあったので、個人的にはやっぱブログに最適なのかなと。</p><p>今回使用した技術は</p><ul><li>フロントエンド: AstroJS</li><li>CMS: MicroCMS</li><li>ホスティング:GitHub Pages</li></ul><p>ブログのリポジトリ</p><p><a href=\"https://github.com/nk4dev/astro-blog\">https://github.com/nk4dev/astro-blog</a></p><h2 id=\"h9de96a3ebd\">ホスティング・デプロイ設定</h2><p>事前にリポジトリを作成しMicroCMSのAPIキーを設定しておくとあとあと楽です。完成してから設定でもいいのですが、ビルド時にエラーを吐きやすくなります。</p><p>APIキーはリポジトリのSettings &gt; secrets and variables &gt; Actionsから設定できます。</p><div data-filename=\"astro.config.mjs\"><pre><code class=\"language-javascript\">// @ts-check\nimport { defineConfig } from &apos;astro/config&apos;;\n\n// https://astro.build/config\nexport default defineConfig({\n    site: &apos;https://blog.nknighta.me&apos;,\n    base: &apos;/&apos;,\n});</code></pre></div><p>GitHub Pages用のせっていはこれだけでした。Nextjsに比べると圧倒的に楽ですね。Nextだと画像の最適化機能が使えなかったりしましたが、Astroであれば特定の機能が使えないということは今のところないのでうれしいポイントです。</p><p>今回は自分のドメインを用いてブログを公開するのでbaseには&quot;/&quot;のみ設定していますが、もし&lt;GITHUB_USER_NAME&gt;.github.ioの形式で公開する場合にはリポジトリ名を入れないと404エラーを吐きまくります。</p><p>またデプロイはGitHub Actionを使います。これも公式ドキュメントに書いてあります。ありがたい</p><p><a href=\"https://docs.astro.build/ja/guides/deploy/github/#github-actionの設定\">https://docs.astro.build/ja/guides/deploy/github/#github-actionの設定</a></p><p>deploy.ymlはそのままコピペで.github/workflows/deploy.ymlファイルに記載すれば大丈夫です。</p><p>あとはpushしてビルドが完了するのを待つだけです。</p><h2 id=\"hbc48be6f8b\">引用・参考サイト</h2><p>Takuyaさんのサイト</p><p><a href=\"https://uses.craftz.dog/\">https://uses.craftz.dog/</a></p><p>Astrojs docs (英語版)</p><p><a href=\"https://astro.build/\">https://astro.build/</a></p><p>BoC&apos;z (Pixiv百科事典)</p><p><a href=\"https://dic.pixiv.net/a/BoC%27z\">https://dic.pixiv.net/a/BoC%27z</a></p><p>※BoC&apos;z公式サイトは公開停止してました...(アクセスするとホームページにリダイレクトする)</p><p>Youtube動画</p><div style=\"left: 0; width: 100%; height: 0; position: relative; padding-bottom: 56.25%;\"><iframe src=\"https://www.youtube.com/embed/3_JE76PKBWE?rel=0\" style=\"top: 0; left: 0; width: 100%; height: 100%; position: absolute; border: 0;\" allowfullscreen scrolling=\"no\" allow=\"accelerometer *; clipboard-write *; encrypted-media *; gyroscope *; picture-in-picture *; web-share *;\"></iframe></div>","eyecatch":{"url":"https://images.microcms-assets.io/assets/a2939c8d25434ae5a1f853f2dc239a0f/89db5127223f4231affa57c5c8b79043/astro-logo-light-gradient.png","height":320,"width":920},"category":{"id":"gizfo_py447e","createdAt":"2025-08-27T02:44:53.914Z","updatedAt":"2025-08-27T02:44:53.914Z","publishedAt":"2025-08-27T02:44:53.914Z","revisedAt":"2025-08-27T02:44:53.914Z","name":"tech_learn"}},{"id":"available-llm-myblog","createdAt":"2025-07-30T02:42:49.202Z","updatedAt":"2025-07-30T02:42:49.202Z","publishedAt":"2025-07-30T02:42:49.202Z","revisedAt":"2025-07-30T02:42:49.202Z","title":"自分のサイトにllms.txtを導入した","content":"<p>最近は検索エンジン(というか実質Google)向けのSEO以上に生成AIむけの要約対策をしたほうがいいらしく、私のサイトでもやってみました。</p><p>とはいえど、私のサイトは大した情報はないですけどね(笑)</p><p>llms.txtにはサイトのURLと私のネット上での活動名なんかを入れています。テキスト事態はGeminiとGitHub Copilotで生成しました。また最近LLMむけにWebコンテンツをMarkdown化するサイトも試していたので今回使ってみました。</p><p>中身は&quot;<a href=\"https://nknighta.me/llms.txt\" target=\"_blank\" rel=\"noopener noreferrer\">ここ</a>&quot;から見れます</p><h2 id=\"h5acf5a0d6e\">使ったツール</h2><p>Gemini </p><p>GitHub Copilot(学生向け)</p><p>Web2md : WebをLLMむけにmarkdown化するサイト(試験公開中らしいので今後有料化するかも?)</p><p><a href=\"https://web2md.fybe.jp/\">https://web2md.fybe.jp/</a></p><h2 id=\"hdf0456f9a2\">引用</h2><p>伝統的なSEO対策はすでに死滅しており「AIの要約対策」が急務だとの指摘、一体どのようにすれば良いのか？ - GIGAZINE</p><p><a href=\"https://gigazine.net/news/20250725-ai-summary-llm-seo/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://gigazine.net/news/20250725-ai-summary-llm-seo</a></p>","eyecatch":{"url":"https://images.microcms-assets.io/assets/a2939c8d25434ae5a1f853f2dc239a0f/b625a5435e8d4d18ab6c0b5499405b30/icon.jpeg","height":1200,"width":1200},"category":{"id":"u78aqp7lgux","createdAt":"2025-02-12T05:09:19.637Z","updatedAt":"2025-02-12T05:09:19.637Z","publishedAt":"2025-02-12T05:09:19.637Z","revisedAt":"2025-02-12T05:09:19.637Z","name":"更新情報"}},{"id":"new-xnv-sdk","createdAt":"2025-07-29T04:35:27.476Z","updatedAt":"2025-07-29T04:50:55.469Z","publishedAt":"2025-07-29T04:44:44.960Z","revisedAt":"2025-07-29T04:50:41.405Z","title":"【Web3】VXをXNVに名称変更します","content":"<p>以前から個人的に開発しているVXですが、プロジェクトを進めていくうちに他の開発者のエンジニアのライブラリを名前が被ることが多くなりました。そこで名称をXNVに変更します。</p><p>名前とコマンドは変わりますが、その他の仕様は同じです。</p><p>そのうち新規ライブラリのリポジトリの作成もやろうと思います。</p><p>【旧】</p><p><a href=\"https://nknighta.me/l/vx\" target=\"_blank\" rel=\"noopener noreferrer\">https://nknighta.me/l/vx</a></p><p>【新】</p><p><a href=\"https://nknighta.me/l/xnv\" target=\"_blank\" rel=\"noopener noreferrer\">https://nknighta.me/l/xnv</a></p>","eyecatch":{"url":"https://images.microcms-assets.io/assets/a2939c8d25434ae5a1f853f2dc239a0f/77a72afc44f540a1b704a37a7403f7d9/%E7%84%A1%E9%A1%8C32_20250729111800.png","height":2525,"width":2525,"alt":"XNVロゴ"},"category":{"id":"xnv","createdAt":"2025-07-29T04:50:14.277Z","updatedAt":"2025-07-29T04:50:22.945Z","publishedAt":"2025-07-29T04:50:14.277Z","revisedAt":"2025-07-29T04:50:14.277Z","name":"xnv"}},{"id":"flutter_practice","createdAt":"2025-07-02T06:47:31.005Z","updatedAt":"2025-07-02T06:47:31.005Z","publishedAt":"2025-07-02T06:47:31.005Z","revisedAt":"2025-07-02T06:47:31.005Z","title":"todo アプリでFlutterの開発練習","content":"<p>Flutterでtodoアプリを作ってみましたー</p><p>当初はローカルにのみ記録するつもりだったのですが、</p><p>最近Firebase+Flutterの組み合わせをいろんなアプリで試しているのでfirebase経由でのタスク同期やサインイン機能を実装しました。</p><p>便利だけど無料枠の上限に達しないか心配...</p><pre><code>http: ^1.2.1 # Add http package  firebase_core: ^3.1.1\nfirebase_auth: ^5.1.1\ngoogle_sign_in: ^6.2.1\ncupertino_icons: ^1.0.8\nshared_preferences: ^2.5.3\nchange_app_package_name: ^1.5.0\nintl: ^0.20.2 \ncloud_firestore: ^5.6.9　// firebase\nflutter_dotenv: ^5.2.1 // envの管理に必要</code></pre><figure><img src=\"https://images.microcms-assets.io/assets/a2939c8d25434ae5a1f853f2dc239a0f/fa0449b11fc7453ebdc6ac50a1f8b857/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202025-07-02%20151717.png\" alt=\"todo画面\" width=\"1266\" height=\"713\"></figure><figure><img src=\"https://images.microcms-assets.io/assets/a2939c8d25434ae5a1f853f2dc239a0f/cf23b7fcc73e4a5e9e1196cbd5088234/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202025-07-02%20151411.png\" alt=\"サインイン画面\" width=\"1266\" height=\"713\"></figure><h2 id=\"h88876ec3b5\">リポジトリ</h2><p><a href=\"https://github.com/nknighta/mobile-app-practice.git\">nknighta/mobile-app-practice</a></p>","eyecatch":{"url":"https://images.microcms-assets.io/assets/a2939c8d25434ae5a1f853f2dc239a0f/fa0449b11fc7453ebdc6ac50a1f8b857/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202025-07-02%20151717.png","height":713,"width":1266},"category":null},{"id":"published_vx_package_github","createdAt":"2025-06-19T02:11:31.448Z","updatedAt":"2025-06-19T02:16:34.757Z","publishedAt":"2025-06-19T02:11:31.448Z","revisedAt":"2025-06-19T02:16:34.757Z","title":"VX package released on a trial basis","content":"<p>We have now released a trial version of the VX package on github.</p><p><a href=\"https://github.com/nknighta/vx/pkgs/npm/vx\">https://github.com/nknighta/vx/pkgs/npm/vx</a></p><p>To install the script, click below (requires npm installation):</p><pre><code class=\"language-shell\">npm install @nknighta/vx@0.0.12</code></pre><p><strong>Note:</strong></p><p>The current version is for testing purposes only and is not fully functional.</p><p>Do not use in real applications.</p>","eyecatch":{"url":"https://images.microcms-assets.io/assets/a2939c8d25434ae5a1f853f2dc239a0f/b52fcd2616084cd6b453d512e8591d7a/header.png","height":720,"width":1280},"category":{"id":"vx","createdAt":"2025-06-07T16:28:20.159Z","updatedAt":"2025-06-07T16:28:43.322Z","publishedAt":"2025-06-07T16:28:20.159Z","revisedAt":"2025-06-07T16:28:43.322Z","name":"vx"}},{"id":"vx-cloudflare-firebase","createdAt":"2025-06-12T03:05:46.804Z","updatedAt":"2025-06-12T05:45:31.143Z","publishedAt":"2025-06-12T03:05:55.903Z","revisedAt":"2025-06-12T03:06:23.400Z","title":"【Firebase】React Router+Firebase+Cloudflareで認証サイトを作った(2025-06-12時点)","content":"<h2 id=\"h250913c1dc\">やりかったこと</h2><p>私が開発しているWeb3 SDKであるVXのダッシュボードやドキュメントで使うアカウント連携機能用に認証アプリケーションを作る。</p><h2 id=\"h0c8fa4812e\">処理の流れ</h2><p>ドキュメントサイトなどでログインボタン押下 =&gt; 認証ページに遷移 =&gt; Google又はGitHubで認証 =&gt; 元のページに戻る</p><p>コールバックで元のページに戻った段階で裏で認証情報を読み取ります</p><h2 id=\"hc167090f26\">APIキーで詰んだ</h2><h3 id=\"h5dcd5df243\">エラーコード</h3><div data-filename=\"firebase-faild.ts\"><pre><code class=\"language-typescript\">// うごかねぇ\nimport { initializeApp } from &quot;firebase/app&quot;;\nimport { getAuth } from &quot;firebase/auth&quot;;\n//import { getAnalytics } from &quot;firebase/analytics&quot;;\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app&apos;s Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_API_KEY,　// process.envではよめない\n  authDomain: process.env.NEXT_PUBLIC_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n//const analytics = getAnalytics(app);\nconst auth = getAuth(app);\n\nexport { auth };</code></pre></div><h3 id=\"h04757ee1c0\">修正済コード</h3><div data-filename=\"firebase.ts\"><pre><code class=\"language-typescript\">// Import the functions you need from the SDKs you need\nimport { initializeApp } from &quot;firebase/app&quot;;\nimport { getAuth } from &quot;firebase/auth&quot;;\n//import { getAnalytics } from &quot;firebase/analytics&quot;;\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app&apos;s Firebase configuration\nconst firebaseConfig = {\n  apiKey: import.meta.env.VITE_REACT_APP_API_KEY,\n  authDomain: import.meta.env.VITE_REACT_APP_AUTH_DOMAIN,\n  projectId: import.meta.env.VITE_REACT_APP_PROJECT_ID,\n  storageBucket: import.meta.env.VITE_REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: import.meta.env.VITE_REACT_APP_MESSAGING_SENDER_ID,\n  appId: import.meta.env.VITE_REACT_APP_APP_ID,\n  measurementId: import.meta.env.VITE_REACT_APP_MEASUREMENT_ID\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n//const analytics = getAnalytics(app);\nconst auth = getAuth(app);\n\nexport { auth };</code></pre></div><h3 id=\"h41e3733aef\">動かなかった原因</h3><p>認証用サイトは裏でViteを使っていたのですが、Vitejsはほかのフロントエンドフレームワークとは環境変数の読み込み方が違っており、それが原因でローカルでもデプロイ先でも画面がブラックアウトしたまま固まってしまってましたw</p><p>エラーの解消に数時間かかった...</p><h2 id=\"h2437a71527\">認証サイト</h2><p><a href=\"https://auth.varius.technology/\">https://auth.varius.technology/</a></p><h2 id=\"h3de35099b3\">参考</h2><p><a href=\"https://dash.cloudflare.com/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://dash.cloudflare.com/</a></p><p><a href=\"https://qiita.com/bisketoriba/items/0b70fd5e130e8eabeeb1\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://qiita.com/bisketoriba/items/0b70fd5e130e8eabeeb1</a></p>","eyecatch":{"url":"https://images.microcms-assets.io/assets/a2939c8d25434ae5a1f853f2dc239a0f/b77659c0273f4e348bd11d9b2bb7830c/Cloudflare-Logo-1024x576.png","height":576,"width":1024},"category":{"id":"vx","createdAt":"2025-06-07T16:28:20.159Z","updatedAt":"2025-06-07T16:28:43.322Z","publishedAt":"2025-06-07T16:28:20.159Z","revisedAt":"2025-06-07T16:28:43.322Z","name":"vx"}},{"id":"o9ocrbkt387","createdAt":"2025-06-07T16:27:44.706Z","updatedAt":"2025-08-30T16:00:59.261Z","publishedAt":"2025-06-07T16:27:44.706Z","revisedAt":"2025-08-30T16:00:59.261Z","title":"【VX】リポジトリ名の変更","content":"<p>VXのリポジトリ名を入れ替えました</p><p>vx =&gt; vx-home</p><p>vx-sdk =&gt; vx</p><p></p><p>URL:</p><p>VX</p><p><a href=\"https://github.com/nknighta/vx\">https://github.com/nknighta/vx</a></p><p>vx ホームページ</p><p><a href=\"https://github.com/nknighta/vx-home\">https://github.com/nknighta/vx-home</a></p><p></p><p>個人でWeb3ライブラリ作ってます</p>","eyecatch":{"url":"https://images.microcms-assets.io/assets/a2939c8d25434ae5a1f853f2dc239a0f/77a72afc44f540a1b704a37a7403f7d9/%E7%84%A1%E9%A1%8C32_20250729111800.png","height":2525,"width":2525,"alt":"XNVロゴ"},"category":{"id":"vx","createdAt":"2025-06-07T16:28:20.159Z","updatedAt":"2025-06-07T16:28:43.322Z","publishedAt":"2025-06-07T16:28:20.159Z","revisedAt":"2025-06-07T16:28:43.322Z","name":"vx"}}],"categories":[{"id":"gizfo_py447e","createdAt":"2025-08-27T02:44:53.914Z","updatedAt":"2025-08-27T02:44:53.914Z","publishedAt":"2025-08-27T02:44:53.914Z","revisedAt":"2025-08-27T02:44:53.914Z","name":"tech_learn"},{"id":"xnv","createdAt":"2025-07-29T04:50:14.277Z","updatedAt":"2025-07-29T04:50:22.945Z","publishedAt":"2025-07-29T04:50:14.277Z","revisedAt":"2025-07-29T04:50:14.277Z","name":"xnv"},{"id":"vx","createdAt":"2025-06-07T16:28:20.159Z","updatedAt":"2025-06-07T16:28:43.322Z","publishedAt":"2025-06-07T16:28:20.159Z","revisedAt":"2025-06-07T16:28:43.322Z","name":"vx"},{"id":"nextjs","createdAt":"2025-06-06T16:38:26.014Z","updatedAt":"2025-06-06T17:45:40.442Z","publishedAt":"2025-06-06T16:38:26.014Z","revisedAt":"2025-06-06T17:44:21.985Z","name":"nextjs"},{"id":"u78aqp7lgux","createdAt":"2025-02-12T05:09:19.637Z","updatedAt":"2025-02-12T05:09:19.637Z","publishedAt":"2025-02-12T05:09:19.637Z","revisedAt":"2025-02-12T05:09:19.637Z","name":"更新情報"}]},"__N_SSG":true}